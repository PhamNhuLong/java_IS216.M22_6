/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlythuvien;

/**
 *
 * @author minh
 */
import java.awt.Color;
import java.sql.*;
import javax.swing.*;
import DAO.*;
import Object.*;
//import com.sun.glass.events.KeyEvent;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Date;

public class QuanLyTheDocGiaPanel extends javax.swing.JPanel {

    /**
     * Creates new form QuanLyDocGia
     */
    public static String sql = "select * from DOCGIA order by MADOCGIA asc";
    public static String sql1 = "select count(*) as tong from DOCGIA order by 1 asc";
    public static PreparedStatement pst = null;
    public static ResultSet rs = null;
    public static Connection conn = Connect.getConnect();
    SimpleDateFormat formatter = new SimpleDateFormat("d MMM, y");
    Date date = new Date();

    public QuanLyTheDocGiaPanel() {
        initComponents();
        showtb();
        setBackground(Color.white);
        txtMaDocGia.setVisible(false);
        lbMaDocGia.setVisible(false);
        //System.out.print(tbDocGia.getRowCount());
        btnGiaHan.setVisible(false);
        jDateNgayLapThe.setDate(date);
    }

    public final void showtb() {
        DuLieuBang.Load(sql, tbDocGia);
    }

    public int dem() {
        int temp = 0;
        try {
            pst = conn.prepareStatement(sql1);
            rs = pst.executeQuery();
            while (rs.next()) {
                temp = rs.getInt("tong");
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyTheDocGiaPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        return temp;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbMaDocGia = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtMaDocGia = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        txtLoaiDG = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jDateNgaySinh = new com.toedter.calendar.JDateChooser();
        jDateNgayLapThe = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jDateNgayDenHan = new com.toedter.calendar.JDateChooser();
        btnGiaHan = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDocGia = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btThemMoi = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btXoa = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btCapNhat = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        btLamMoi = new javax.swing.JButton();
        btTimKiem = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.pink, null));
        jPanel1.setPreferredSize(new java.awt.Dimension(309, 395));

        lbMaDocGia.setText("Mã độc giả");

        jLabel3.setText("Họ tên");

        jLabel4.setText("Ngày sinh");

        jLabel5.setText("Loại độc giả");

        jLabel6.setText("Địa chỉ");

        jLabel7.setText("Email");

        jLabel8.setText("Ngày lập thẻ");

        txtMaDocGia.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtMaDocGia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaDocGiaKeyPressed(evt);
            }
        });

        jDateNgayLapThe.setEnabled(false);

        jLabel9.setText("Ngày đến hạn");

        jDateNgayDenHan.setEnabled(false);

        btnGiaHan.setBackground(new java.awt.Color(255, 0, 0));
        btnGiaHan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnGiaHan.setForeground(new java.awt.Color(255, 255, 255));
        btnGiaHan.setText("Gia hạn độc giả");
        btnGiaHan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGiaHan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGiaHanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbMaDocGia, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMaDocGia, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jDateNgayLapThe, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                        .addComponent(txtDiaChi, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtLoaiDG, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jDateNgaySinh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtHoTen, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jDateNgayDenHan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                    .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(btnGiaHan)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLoaiDG, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateNgayLapThe, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateNgayDenHan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnGiaHan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaDocGia, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbMaDocGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29))
        );

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setBackground(new java.awt.Color(255, 204, 204));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ THẺ ĐỘC GIẢ");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 0, 204), null));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        tbDocGia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "MÃ ĐỘC GIẢ", "HỌ TÊN", "NGÀY SINH", "LOẠI DG", "ĐỊA CHỈ", "EMAIL", "NGÀY LẬP THẺ"
            }
        ));
        tbDocGia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDocGiaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbDocGia);

        jToolBar1.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar1.setRollover(true);
        jToolBar1.setPreferredSize(new java.awt.Dimension(250, 50));
        jToolBar1.add(jSeparator1);

        btThemMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-add-50.png"))); // NOI18N
        btThemMoi.setFocusable(false);
        btThemMoi.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btThemMoi.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btThemMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThemMoiActionPerformed(evt);
            }
        });
        jToolBar1.add(btThemMoi);
        jToolBar1.add(jSeparator2);

        btXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-delete-50.png"))); // NOI18N
        btXoa.setFocusable(false);
        btXoa.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btXoa.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXoaActionPerformed(evt);
            }
        });
        jToolBar1.add(btXoa);
        jToolBar1.add(jSeparator3);

        btCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-edit-50.png"))); // NOI18N
        btCapNhat.setFocusable(false);
        btCapNhat.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCapNhat.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCapNhatActionPerformed(evt);
            }
        });
        jToolBar1.add(btCapNhat);
        jToolBar1.add(jSeparator4);

        btLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-refresh-50.png"))); // NOI18N
        btLamMoi.setFocusable(false);
        btLamMoi.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btLamMoi.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLamMoiActionPerformed(evt);
            }
        });
        jToolBar1.add(btLamMoi);

        btTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/timkiem.png"))); // NOI18N
        btTimKiem.setFocusable(false);
        btTimKiem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btTimKiem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTimKiemActionPerformed(evt);
            }
        });

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTimKiem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbDocGiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDocGiaMouseClicked
        // TODO add your handling code here:
        try {
            int row = this.tbDocGia.getSelectedRow();
            int MArow = (int) (this.tbDocGia.getModel().getValueAt(row, 0));
            String sql1 = " select * from DOCGIA where MADOCGIA='" + MArow + "'";
            ResultSet rs = DuLieuBang.ShowTextField(sql1);
            Date denhan = new Date();
            if (rs.next()) {
                this.txtMaDocGia.setText(rs.getString("MADOCGIA"));
                this.txtHoTen.setText(rs.getString("HOTEN"));
                this.jDateNgaySinh.setDate(rs.getDate("NGAYSINH"));
                this.txtLoaiDG.setText(rs.getString("LOAIDG"));
                this.txtDiaChi.setText(rs.getString("DIACHI"));
                this.txtEmail.setText(rs.getString("EMAIL"));
                this.jDateNgayLapThe.setDate(rs.getDate("NGLAPTHE"));
                this.jDateNgayDenHan.setDate(rs.getDate("NGDENHAN"));
                denhan = rs.getDate("NGDENHAN");
            }
            if (!denhan.after(date)) {
                btnGiaHan.setVisible(true);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_tbDocGiaMouseClicked

    private void btLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLamMoiActionPerformed
        // TODO add your handling code here:
        lamMoi();
    }//GEN-LAST:event_btLamMoiActionPerformed
    public void lamMoi() {
        txtMaDocGia.setText("");
        txtHoTen.setText("");
        jDateNgaySinh.setDate(null);
        txtDiaChi.setText("");
        txtLoaiDG.setText("");
        txtEmail.setText("");
        jDateNgayLapThe.setDate(date);
        txtTimKiem.setText("");
        jDateNgayDenHan.setDate(null);
        btnGiaHan.setVisible(false);
        showtb();
    }
    private void btCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCapNhatActionPerformed
        // TODO add your handling code here:
        if (this.txtMaDocGia.getText().length() == 0)
            JOptionPane.showMessageDialog(null, "Bạn chưa nhập mã độc giả", "Thông báo", 1);
        else if (this.txtHoTen.getText().length() == 0)
            JOptionPane.showMessageDialog(null, "Bạn chưa nhập tên độc giả", "Thông báo", 1);
        else {
            try {
                int result = JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn cập nhật độc giả này", "Xác nhận", JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION) {
                    DocGia dg = new DocGia();

                    dg.setmADOCGIA(txtMaDocGia.getText());
                    dg.sethOTEN(txtHoTen.getText());
                    if (jDateNgaySinh.getDate() != null) {
                        java.util.Date utilStartDate = jDateNgaySinh.getDate();
                        java.sql.Date sqlStartDate = new java.sql.Date(utilStartDate.getTime());
                        dg.setnGAYSINH(sqlStartDate);
                    }
                    //dg.setnGAYSINH((Date) jDateNgaySinh.getDate());
                    dg.setlOAIDG(txtLoaiDG.getText());
                    dg.setdIACHI(txtDiaChi.getText());
                    dg.seteMAIL(txtEmail.getText());
                    if (jDateNgayLapThe.getDate() != null) {
                        java.util.Date utilStartDate = jDateNgayLapThe.getDate();
                        java.sql.Date sqlStartDate = new java.sql.Date(utilStartDate.getTime());
                        dg.setnGAYLAPTHE(sqlStartDate);
                    }

                    DocGiaDAO dao = new DocGiaDAO();
                    dao.UpdateDocGia(dg);
                    JOptionPane.showMessageDialog(null, "Độc giả được cập nhật thành công", "Thông báo", 1);
                    lamMoi();
                }
            } catch (Exception e) {
                // JOptionPane.showMessageDialog(null, "Lỗi!"+ e.getMessage(),"Thông báo",1 );
                //ORA-04088:
                if (e.getMessage().contains("ORA-04088")) {
                    JOptionPane.showMessageDialog(null, "Cập nhật không thành công. Ngày lập thẻ phải lớn hơn ngày sinh!", "Lỗi", JOptionPane.WARNING_MESSAGE);
                }

            }
        }
    }//GEN-LAST:event_btCapNhatActionPerformed

    private void btXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXoaActionPerformed
        // TODO add your handling code here:
        int temp1 = dem();

        if (this.txtMaDocGia.getText().length() == 0)
            JOptionPane.showMessageDialog(null, "Bạn cần chọn mã độc giả để xóa", "Thông báo", 1);
        else {
            try {

                int result = JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn xóa độc giả này", "Xác nhận", JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION) {

                    if (DocGiaDAO.checkdg_muonsach(txtMaDocGia.getText()) == 0) {
                        DocGiaDAO.DeleteDocGia(txtMaDocGia.getText());
                        int temp2 = dem();
                        // System.out.print(temp1 + temp2);
                        if (temp1 != temp2) {
                            JOptionPane.showMessageDialog(null, "Độc giả xóa thành công!", "Thông báo", 1);
                            showtb();
                        } else {
                            JOptionPane.showMessageDialog(null, "Xóa không thành công. Độc giả này đang mượn sách!", "Thông báo", 1);
                        }
                    } else {
                        //JOptionPane.showMessageDialog(null, "Xóa không thành công!", "Thông báo",1);
                        JOptionPane.showMessageDialog(null, "Xóa không thành công. Độc giả này đang mượn sách!", "Thông báo", 1);
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());

            }
        }
    }//GEN-LAST:event_btXoaActionPerformed

    private void btThemMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThemMoiActionPerformed
        // TODO add your handling code here:
//        if(this.txtMaDocGia.getText().length()==0)
//        JOptionPane.showMessageDialog(null,"Bạn chưa nhập mã độc giả","Thông báo",1);
//        else
        if (this.txtHoTen.getText().length() == 0)
            JOptionPane.showMessageDialog(null, "Bạn chưa nhập tên độc giả", "Thông báo", 1);
        else {
            try {
                int result = JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn thêm độc giả này", "Xác nhận", JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION) {
                    DocGia dg = new DocGia();
                    dg.setmADOCGIA(txtMaDocGia.getText());
                    dg.sethOTEN(txtHoTen.getText());
                    Calendar cal = Calendar.getInstance();
                    cal.add(Calendar.MONTH, 4);
                    if (cal.getTime() != null) {
                        java.util.Date utilStartDate = cal.getTime();
                        java.sql.Date sqlStartDate = new java.sql.Date(utilStartDate.getTime());
                        dg.setnGAYDENHAN(sqlStartDate);
                    }
                    if (jDateNgaySinh.getDate() != null) {
                        java.util.Date utilStartDate = jDateNgaySinh.getDate();
                        java.sql.Date sqlStartDate = new java.sql.Date(utilStartDate.getTime());
                        dg.setnGAYSINH(sqlStartDate);
                    }
                    //dg.setnGAYSINH((Date) jDateNgaySinh.getDate());
                    dg.setlOAIDG(txtLoaiDG.getText());
                    dg.setdIACHI(txtDiaChi.getText());
                    dg.seteMAIL(txtEmail.getText());
                    if (jDateNgayLapThe.getDate() != null) {
                        java.util.Date utilStartDate = jDateNgayLapThe.getDate();
                        java.sql.Date sqlStartDate = new java.sql.Date(utilStartDate.getTime());
                        dg.setnGAYLAPTHE(sqlStartDate);
                    }
                    String ns = jDateNgaySinh.getDate().toString();
                    //dg.setnGAYLAPTHE((Date) jDateNgayLapThe.getDate());
                    if (isDateAfter(ns) == true) {

                        DocGiaDAO.InsertDocGia(dg);
                        JOptionPane.showMessageDialog(null, "Độc giả được thêm vào thành công", "Thông báo", 1);
                        showtb();
                    } else {
                        JOptionPane.showMessageDialog(null, "Thêm không thành công. Ngày lập thẻ phải lớn hơn ngày sinh!", "Lỗi", JOptionPane.WARNING_MESSAGE);
                    }
                }
            } catch (Exception e) {
                // JOptionPane.showMessageDialog(null, "Lỗi!"+ e.getMessage(),"Thông báo",1 );
                //ORA-04088:
                if (e.getMessage().contains("ORA-00001: unique constraint (SINHVIEN02.PK_DOCGIA) violated")) {
                    JOptionPane.showMessageDialog(null, "Mã độc giả đã tồn tại, vui lòng nhập lại ", "Lỗi", JOptionPane.WARNING_MESSAGE);
                }
                if (e.getMessage().contains("ORA-04088")) {
                    JOptionPane.showMessageDialog(null, "Thêm không thành công. Ngày lập thẻ phải lớn hơn ngày sinh!", "Lỗi", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btThemMoiActionPerformed
    boolean isDateAfter(String ngsinh) {
//        System.out.println(ngsinh);
        try {
//            System.out.println("co");
            ngsinh = ngsinh.substring(ngsinh.length() - 4, ngsinh.length());
            int namsinh = Integer.valueOf(ngsinh);
            int namlapthe = Calendar.getInstance().get(Calendar.YEAR);
//            System.out.println(year);
            int tuoi = namlapthe - namsinh;

            if (tuoi > 6 && tuoi < 60) {
                return true;
            } else {
                return false;
            }

        } catch (Exception e) {
            return false;
        }

    }
    private void btTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTimKiemActionPerformed
        // TODO add your handling code here:
        if (this.txtMaDocGia.getText().length() != 0) {
            String sql2 = " select * from DOCGIA where lower(MADOCGIA) like lower('%" + this.txtMaDocGia.getText() + "%') ";
            DuLieuBang.Load(sql2, tbDocGia);
        } else if (this.txtHoTen.getText().length() != 0) {
            String sql1 = " select * from DOCGIA where lower(HOTEN) like lower('%" + this.txtHoTen.getText() + "') ||'%' ";
            //lower(TENDAUSACH) like lower('%" +this.txtTimKiem.getText()+"') || '%'"
            DuLieuBang.Load(sql1, tbDocGia);
        } else if (this.txtTimKiem.getText().length() != 0) {
            String sql = "SELECT * FROM DOCGIA where MADOCGIA like'%" + this.txtTimKiem.getText() + "%' "
                    + "or lower(HOTEN) like lower('%" + this.txtTimKiem.getText() + "%')";
            DuLieuBang.Load(sql, tbDocGia);
        } else {
            JOptionPane.showMessageDialog(null, "Bạn chưa nhập", "Thông báo", 1);
        }
    }//GEN-LAST:event_btTimKiemActionPerformed

    private void txtMaDocGiaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaDocGiaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtHoTen.requestFocus();
        }
    }//GEN-LAST:event_txtMaDocGiaKeyPressed

    private void txtTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String sql = "SELECT * FROM DOCGIA where MADOCGIA like'%" + this.txtTimKiem.getText() + "%' "
                    + "or HOTEN like '%" + this.txtTimKiem.getText() + "%'";
            DuLieuBang.Load(sql, tbDocGia);
        }
    }//GEN-LAST:event_txtTimKiemKeyPressed

    private void btnGiaHanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGiaHanActionPerformed
        // TODO add your handling code here:
        String sql4 = "UPDATE DOCGIA SET NGDENHAN = ? WHERE MADOCGIA = ?";
        try {
            pst = conn.prepareStatement(sql4);
            if (jDateNgayDenHan.getDate() != null) {
                Calendar cal= jDateNgayDenHan.getCalendar();
                cal.add(Calendar.MONTH, 4);
                Date currentDatePlusOne = cal.getTime();
                java.sql.Date sqlStartDate = new java.sql.Date(currentDatePlusOne.getTime());
                pst.setDate(1, sqlStartDate);
            }
            pst.setString(2,txtMaDocGia.getText());
             pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Độc giả được gia hạn thành công", "Thông báo", 1);
            lamMoi();
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyTheDocGiaPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGiaHanActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCapNhat;
    private javax.swing.JButton btLamMoi;
    private javax.swing.JButton btThemMoi;
    private javax.swing.JButton btTimKiem;
    private javax.swing.JButton btXoa;
    private javax.swing.JButton btnGiaHan;
    private com.toedter.calendar.JDateChooser jDateNgayDenHan;
    private com.toedter.calendar.JDateChooser jDateNgayLapThe;
    private com.toedter.calendar.JDateChooser jDateNgaySinh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lbMaDocGia;
    private javax.swing.JTable tbDocGia;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtLoaiDG;
    private javax.swing.JTextField txtMaDocGia;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
