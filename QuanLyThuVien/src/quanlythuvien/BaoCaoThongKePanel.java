/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlythuvien;

import DAO.Connect;
import DAO.DuLieuBang;
import Object.ThongKe;
import java.awt.CardLayout;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author minh
 */
public class BaoCaoThongKePanel extends javax.swing.JPanel {

    /**
     * Creates new form BaoCaoThongKePanel
     */
    public Connection conn;
    public static PreparedStatement pst = null;
    public static ResultSet rs = null;
    public static CallableStatement stmt = null ;
    public BaoCaoThongKePanel() {
        initComponents();
        panelTraCuu.setVisible(false);
        pnBarChart.setVisible(false);
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbThongKe = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtNam = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtThang = new javax.swing.JTextField();
        panelTraCuu = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbTraCuu = new javax.swing.JTable();
        jBTraCuu = new javax.swing.JButton();
        jBInBaoCao = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        pnBarChart = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1074, 571));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(250, 250));

        jLabel1.setText("Loại Thống Kê");

        cbThongKe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Thống kê tình trạng mượn sách theo tháng", "Thống kê tiền phạt của độc giả theo tháng" }));

        jLabel2.setText("Chọn năm");

        jLabel4.setText("Chọn tháng");

        tbTraCuu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Đầu sách", "Tác giả", "Nhà xuất bản", "Số lượt mượn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbTraCuu);

        javax.swing.GroupLayout panelTraCuuLayout = new javax.swing.GroupLayout(panelTraCuu);
        panelTraCuu.setLayout(panelTraCuuLayout);
        panelTraCuuLayout.setHorizontalGroup(
            panelTraCuuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTraCuuLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelTraCuuLayout.setVerticalGroup(
            panelTraCuuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTraCuuLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 78, Short.MAX_VALUE))
        );

        jBTraCuu.setText("Tra cứu");
        jBTraCuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTraCuuActionPerformed(evt);
            }
        });

        jBInBaoCao.setText("In báo cáo");
        jBInBaoCao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInBaoCaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelTraCuu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbThongKe, 0, 316, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtNam, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                    .addComponent(txtThang))
                                .addGap(25, 25, 25)
                                .addComponent(jBTraCuu, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBInBaoCao)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtThang, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBTraCuu, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBInBaoCao, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNam, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTraCuu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        jLabel3.setBackground(new java.awt.Color(255, 204, 204));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("BÁO CÁO THỐNG KÊ");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 0, 255), null));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1074, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnBarChart.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnBarChartLayout = new javax.swing.GroupLayout(pnBarChart);
        pnBarChart.setLayout(pnBarChartLayout);
        pnBarChartLayout.setHorizontalGroup(
            pnBarChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnBarChartLayout.setVerticalGroup(
            pnBarChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 272, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnBarChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnBarChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBInBaoCaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInBaoCaoActionPerformed
        // TODO add your handling code here:
        HashMap map = new HashMap();
        
        if(cbThongKe.getSelectedItem().equals("Thống kê tình trạng mượn sách theo tháng"))
        {
             try{   
                try {
                    String dir = "src\\filereport\\ThongKeSachMuon.jrxml";
                    JasperDesign jd = JRXmlLoader.load(dir);
                    JasperReport jr = JasperCompileManager.compileReport(dir);
                    map.put("Month", txtThang.getText());
                    map.put("Year", txtNam.getText());
                    JasperPrint jp = JasperFillManager.fillReport(jr, map, conn);
                    JasperViewer.viewReport(jp,false);
                } catch (JRException ex) {
                    Logger.getLogger(BaoCaoThongKePanel.class.getName()).log(Level.SEVERE, null, ex);
                }
           
            conn.commit();
        }  catch (SQLException ex) {
                Logger.getLogger(BaoCaoThongKePanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(cbThongKe.getSelectedItem().equals("Thống kê tiền phạt của độc giả theo tháng"))
        {
             try{   
                try {
                    String dir = "src\\filereport\\ThongKeTienPhat.jrxml";
                    JasperDesign jd = JRXmlLoader.load(dir);
                    JasperReport jr = JasperCompileManager.compileReport(dir);
                    map.put("Month", txtThang.getText());
                    map.put("Year", txtNam.getText());
                    JasperPrint jp = JasperFillManager.fillReport(jr, map, conn);
                    JasperViewer.viewReport(jp,false);
                } catch (JRException ex) {
                    Logger.getLogger(BaoCaoThongKePanel.class.getName()).log(Level.SEVERE, null, ex);
                }
           
            conn.commit();
        }  catch (SQLException ex) {
                Logger.getLogger(BaoCaoThongKePanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_jBInBaoCaoActionPerformed
    
    public void setDataToChart(JPanel jpnItem){
        List<ThongKe> listItem = getListPMS();
        
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        if(listItem != null){
            for(ThongKe item : listItem){
                dataset.addValue( item.getSosachmuon(), "Sách" , item.getTendausach() );
            }
        }
        
        JFreeChart barChart = ChartFactory.createBarChart( 
                "Thống kê mượn sách",
                "Đầu sách","Số lượt mượn"
                , dataset, PlotOrientation.VERTICAL, false, true, false);
        
        ChartPanel chartPanel = new ChartPanel(barChart);
//        chartPanel.setPreferredSize(new Dimension(jpnItem.getWidth),200);

        jpnItem.removeAll();
        jpnItem.setLayout(new CardLayout());
        jpnItem.add(chartPanel);
        jpnItem.validate();
        jpnItem.repaint();
    }
    public void setDataToChart2(JPanel jpnItem){
        List<ThongKe> listItem = getListPTS();
        
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        if(listItem != null){
            for(ThongKe item : listItem){
                dataset.addValue(item.getTienphat(),"Tiền phạt", item.getMadocgia());
            }
        }
        
        JFreeChart barChart = ChartFactory.createBarChart( 
                "Thống kê trả sách",
                "Mã độc giả","Tiền phạt"
                , dataset, PlotOrientation.VERTICAL, false, true, false);
        
        ChartPanel chartPanel = new ChartPanel(barChart);
//        chartPanel.setPreferredSize(new Dimension(jpnItem.getWidth),200);

        jpnItem.removeAll();
        jpnItem.setLayout(new CardLayout());
        jpnItem.add(chartPanel);
        jpnItem.validate();
        jpnItem.repaint();
    }
    public List<ThongKe> getListPMS(){
        conn = Connect.getConnect();
        String sql ="select TENDAUSACH, TACGIA, NXB, count(ds.madausach) as TONGSOLUOTMUON\n "+
                        "from dausach ds, cuonsach cs, ctms ct, phieumuonsach pm\n "+
                        " where ds.madausach = cs.madausach and cs.masach = ct.masach and ct.maphieumuonsach = pm.maphieumuonsach\n"+
                        "and MONTH(NGAYMUON) = '"+ txtThang.getText() +"' and year(NGAYMUON)= '"+ txtNam.getText() +"' \n " +
                        " group by TENDAUSACH, tacgia, nxb order by  TONGSOLUOTMUON desc";
        List<ThongKe> list = new ArrayList<>();
        try{
             pst = conn.prepareStatement(sql);
             rs = pst.executeQuery();
             while(rs.next()){
                 ThongKe tk = new ThongKe();
                 tk.setTendausach(rs.getString("TENDAUSACH"));
                 tk.setSosachmuon(rs.getInt("TONGSOLUOTMUON"));
                 list.add(tk);
             }
        }catch (SQLException ex) {
            throw new ArithmeticException(ex.getMessage());
        } 
        return list;
    }
        public List<ThongKe> getListPTS(){
        conn = Connect.getConnect();
        String sql2 ="select pt.MADOCGIA, dg.HOTEN, COUNT(ct.masach) as TONGSOSACHTRA, SUM(pt.TIENPHATKINAY) as TONGTIEN\n "+
                        "from PHIEUTRASACH pt , DOCGIA dg ,CTTS ct \n "+
                        "where pt.MAPHIEUTRA = ct.MAPHIEUTRA and dg.MADOCGIA = pt.MADOCGIA \n"+
                        "and MONTH(NGAYTRA) = '"+ txtThang.getText() +"' and year(NGAYTRA)= '"+ txtNam.getText() +"' \n " +
                        "group by pt.MADOCGIA,  dg.HOTEN order by TONGSOSACHTRA, TONGTIEN desc";
        List<ThongKe> list = new ArrayList<>();
        try{
             pst = conn.prepareStatement(sql2);
             rs = pst.executeQuery();
             while(rs.next()){
                 ThongKe tk = new ThongKe();
                 tk.setMadocgia(rs.getString("MADOCGIA"));
                 tk.setTienphat(rs.getFloat("TONGTIEN"));
                 list.add(tk);
             }
        }catch (SQLException ex) {
            throw new ArithmeticException(ex.getMessage());
        } 
        return list;
    }
    
    private void jBTraCuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTraCuuActionPerformed
        // TODO add your handling code here:
         if(Integer.valueOf(txtThang.getText()) > 12 || Integer.valueOf(txtThang.getText()) < 1)
             JOptionPane.showMessageDialog(null,"Nhập sai tháng rồi cha","Thông báo",1);
         else if(Integer.valueOf(txtNam.getText()) > 2022 || Integer.valueOf(txtNam.getText()) < 2000)
             JOptionPane.showMessageDialog(null,"Nhập năm từ 2000 đến năm 2022","Thông báo",1);
         else {
         if(cbThongKe.getSelectedItem().equals("Thống kê tình trạng mượn sách theo tháng")){
         try {
            conn = Connect.getConnect();
            conn.setTransactionIsolation(Connection.TRANSACTION_SERIALIZABLE);
            conn.setAutoCommit(false);
            String sql ="select TENDAUSACH, TACGIA, NXB, count(ds.madausach) as TONGSOLUOTMUON\n "+
                        "from dausach ds, cuonsach cs, ctms ct, phieumuonsach pm\n "+
                        " where ds.madausach = cs.madausach and cs.masach = ct.masach and ct.maphieumuonsach = pm.maphieumuonsach\n"+
                        "and MONTH(NGAYMUON) = '"+ txtThang.getText() +"' and year(NGAYMUON)= '"+ txtNam.getText() +"' \n " +
                        " group by tendausach, tacgia, nxb order by  TONGSOLUOTMUON desc";
            DuLieuBang.Load(sql, tbTraCuu);
            panelTraCuu.setVisible(true);
            setDataToChart(pnBarChart);
            pnBarChart.setVisible(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(BaoCaoThongKePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        if(cbThongKe.getSelectedItem().equals("Thống kê tiền phạt của độc giả theo tháng")){
         try {
            conn = Connect.getConnect();
            conn.setTransactionIsolation(Connection.TRANSACTION_SERIALIZABLE);
            conn.setAutoCommit(false);
            String sql2 ="select pt.MADOCGIA, dg.HOTEN, COUNT(ct.masach) as TONGSOSACHTRA, SUM(pt.TIENPHATKINAY) as TONGTIEN\n "+
                        "from PHIEUTRASACH pt , DOCGIA dg ,CTTS ct \n "+
                        "where pt.MAPHIEUTRA = ct.MAPHIEUTRA and dg.MADOCGIA = pt.MADOCGIA \n"+
                        "and MONTH(NGAYTRA) = '"+ txtThang.getText() +"' and year(NGAYTRA)= '"+ txtNam.getText() +"' \n " +
                        "group by pt.MADOCGIA,  dg.HOTEN order by TONGSOSACHTRA, TONGTIEN desc";
            DuLieuBang.Load(sql2, tbTraCuu);
            panelTraCuu.setVisible(true);
            setDataToChart2(pnBarChart);
            pnBarChart.setVisible(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(BaoCaoThongKePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        } 
        }
    }//GEN-LAST:event_jBTraCuuActionPerformed
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbThongKe;
    private javax.swing.JButton jBInBaoCao;
    private javax.swing.JButton jBTraCuu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelTraCuu;
    private javax.swing.JPanel pnBarChart;
    private javax.swing.JTable tbTraCuu;
    private javax.swing.JTextField txtNam;
    private javax.swing.JTextField txtThang;
    // End of variables declaration//GEN-END:variables
}
